{"version":3,"sources":["components/auth/auth-service.js","components/auth/protected-routes.js","components/service-file-upload.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/navbar/NavBar.js","components/projects/EditProject.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/auth/Signup.js","components/tasks/TaskDetails.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signUp","username","password","service","post","then","response","data","loggedin","get","login","logout","axios","create","baseURL","concat","process","withCredentials","protectedRoute","_ref","Component","component","user","rest","objectWithoutProperties","console","log","objectSpread","react_default","a","createElement","react_router","assign","render","props","loggedInUser","to","pathname","state","from","location","FileUploadService","theFile","res","catch","error","Error","AddProject","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","_this$state","title","description","imageUrl","getData","setState","handleChange","_event$target","target","name","value","defineProperty","handleFileUpload","e","files","uploadData","FormData","append","uploadService","handleUpload","secure_url","err","ServiceFileUpload","_this2","onSubmit","type","onChange","ProjectList","getAllProjects","responseFromApi","listOfProjects","style","width","float","map","project","key","_id","react_router_dom","src","alt","tasks","task","index","projects_AddProject","NavBar","logoutUser","getUser","nextProps","userInSession","className","textDecoration","onClick","EditProject","put","theProject","getTheProject","history","push","handleChangeTitle","handleChangeDesc","AddTask","projectID","toggleForm","isShowing","showAddTaskForm","ProjectDetails","getSingleProject","params","match","id","renderEditForm","projects_EditProject","deleteProject","delete","renderAddTaskForm","tasks_AddTask","ownershipCheck","owner","length","SignUp","newUser","errorMsg","message","Login","App","fetchUser","getTheUser","userObj","navbar_NavBar","react","exact","path","projects_ProjectDetails","Signup","auth_Login","protected_routes","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.549d5a58.chunk.js","sourcesContent":["// auth/auth-service.js\n\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`,\n      withCredentials: true\n    });\n  }\n\n  signUp = (username, password) => {\n    return this.service.post('/signup', { username, password })\n      .then(response => response.data)\n      // .catch(error => console.log(error))\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute = ({ component: Component, user, ...rest }) => {\n  console.log({ component: Component, user, ...rest })\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (user) {\n          return <Component {...props} loggedInUser={user} />\n        } else {\n          return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n      }\n      }\n    />\n  )\n}\nexport default protectedRoute;","import axios from 'axios';\n\nclass FileUploadService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`,\n      withCredentials: true\n    });\n  }\n\n  handleUpload (theFile) {\n    // console.log('file in service: ', theFile)\n    return this.service.post('/upload', theFile)\n      .then(res => res.data)\n      .catch(error => {throw new Error(error)});\n  }\n  \n}\n\nexport default FileUploadService;","// components/projects/AddProject.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ServiceFileUpload from '../service-file-upload';\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      imageUrl: ''\n    };\n    this.uploadService = new ServiceFileUpload()\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imageUrl } = this.state\n\n    axios.post(`${process.env.REACT_APP_API_URL}/api/projects`, { title, description, imageUrl }, { withCredentials: true })\n      .then(response => {\n        this.props.getData();\n        this.setState({ title: \"\", description: \"\", imageUrl: ''});\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleFileUpload = e => {\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n\n    this.uploadService.handleUpload(uploadData)\n      .then(response => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n        this.setState({ imageUrl: response.secure_url });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChange(e)} />\n          <label>Description:</label>\n          <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChange(e)} />\n          <input\n            type=\"file\"\n            onChange={(e) => this.handleFileUpload(e)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddProject;","// components/projects/ProjectList.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport AddProject from './AddProject';\n\nclass ProjectList extends Component {\n  constructor() {\n    super();\n    this.state = { \n      listOfProjects: []\n    };\n  }\n\n  getAllProjects = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects`, { withCredentials: true })\n      .then(responseFromApi => {\n        console.log(responseFromApi)\n        this.setState({\n          listOfProjects: responseFromApi.data\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getAllProjects();\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ width: '60%', float: \"left\" }}>\n          {this.state.listOfProjects.map(project => {\n            return (\n              <div key={project._id}>\n                <Link to={`/projects/${project._id}`}>\n                  <h3>{project.title}</h3>\n                </Link>\n                {project.imageUrl && <img src={project.imageUrl} alt={project.title} />}\n                {/* <p style={{maxWidth: '400px'}} >{project.description} </p> */}\n                <ul>\n                  {project.tasks.map((task, index) => {\n                    return <li key={index}>{task.title}</li>\n                  })}\n                </ul>\n              </div>\n            )\n          })\n          }\n        </div>\n        <div style={{ width: '40%', float: \"right\" }}>\n          <AddProject getData={() => this.getAllProjects()} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProjectList;","// components/navbar/Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../auth/auth-service';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: null\n    }\n    this.service = new AuthService()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...this.state,\n      loggedInUser: nextProps.userInSession\n    })\n  }\n\n  logoutUser = () => {\n    this.service.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n        this.props.getUser(null);\n      })\n  }\n\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li>Welcome, {this.state.loggedInUser.username}</li>\n            <li>\n              <Link to='/projects' style={{ textDecoration: 'none' }}>Projects</Link>\n            </li>\n            <li>\n              <Link to='/'>\n                <button onClick={() => this.logoutUser()}>Logout</button>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li><Link to='/' style={{ textDecoration: 'none' }}>Login</Link></li>\n              <li><Link to='/signup' style={{ textDecoration: 'none' }}>Signup</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n  }\n}\n\nexport default NavBar;","// components/projects/EditProject.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.theProject.title,\n      description: this.props.theProject.description\n    }\n  }\n\n\n  handleFormSubmit = (event) => {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    event.preventDefault();\n\n    axios.put(`${process.env.REACT_APP_API_URL}/api/projects/${this.props.theProject._id}`, { title, description }, { withCredentials: true })\n      .then(() => {\n        this.props.getTheProject();\n        // after submitting the form, redirect to '/projects'\n        this.props.history.push('/projects');\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChangeTitle = (event) => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n\n  handleChangeDesc = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h3>Edit form</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChangeTitle(e)} />\n          <label>Description:</label>\n          <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChangeDesc(e)} />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditProject;","// components/tasks/AddTask.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  constructor(props){\n      super(props);          //             will help us to toggle add task form   \n                            //                      |\n      this.state = { title: \"\", description: \"\", isShowing: false };\n  }\n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n                                                // it has to be the 'id' because we are referencing project \n                                                // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n    \n    // { title, description, projectID } => this is 'req.body' that will be received on the server side in this route, \n    // so the names have to match\n    axios.post(`${process.env.REACT_APP_API_URL}/tasks`, { title, description, projectID })\n    .then(() => {\n          // after submitting the form, retrieve project one more time so the new task is displayed as well \n          //              |\n        this.props.getTheProject();\n        this.setState({title: \"\", description: \"\"});\n    })\n    .catch(error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n  }\n\n  toggleForm = () => {\n      if(!this.state.isShowing){\n          this.setState({isShowing: true});\n      } else {\n        this.setState({isShowing: false});\n      }\n  }\n\n  showAddTaskForm = () => {\n    if(this.state.isShowing){\n        return(\n            <div>\n                  <h3>Add Task</h3>\n                  <form onSubmit={this.handleFormSubmit}>\n                  <label>Title:</label>\n                  <input type=\"text\" name=\"title\" value={this.state.title} onChange={ e => this.handleChange(e)}/>\n                  <label>Description:</label>\n                  <textarea name=\"description\" value={this.state.description} onChange={ e => this.handleChange(e)} />\n                  \n                  <input type=\"submit\" value=\"Submit\" />\n                  </form>\n            </div>\n          )\n    }\n  }\n\n  render(){\n    return(\n      <div>\n            <hr />\n            <button onClick={() => this.toggleForm()}> Add task </button>\n            { this.showAddTaskForm() }\n      </div>\n    )\n  }\n}\n\nexport default AddTask;","// components/projects/ProjectDetails.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask';\n\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  getSingleProject = () => {\n    const { params } = this.props.match;\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects/${params.id}`, { withCredentials: true })\n      .then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        this.setState(theProject);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  renderEditForm = () => {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n      //                                                                                          ^\n      //                                                                                          |\n      return <EditProject theProject={this.state} getTheProject={this.getSingleProject} {...this.props} />\n\n    }\n  }\n\n  // DELETE PROJECT:\n  deleteProject = () => {\n    const { params } = this.props.match;\n    axios.delete(`http://localhost:5000/api/projects/${params.id}`, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/projects'); // !!!         \n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  renderAddTaskForm = () => {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      // pass the project and method getSingleProject() as a props down to AddTask component\n      return <AddTask theProject={this.state} getTheProject={this.getSingleProject} />\n    }\n  }\n\n  ownershipCheck = project => {\n    if (this.props.loggedInUser && project.owner === this.props.loggedInUser._id) {\n      return (\n        <div>\n          <div>{this.renderEditForm()} </div>\n          <button onClick={() => this.deleteProject(this.state._id)}>Delete project</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n        {/* show the task heading only if there are tasks */}\n        {this.state.tasks && this.state.tasks.length > 0 && <h3>Tasks </h3>}\n        {/* map through the array of tasks and... */}\n        {this.state.tasks && this.state.tasks.map((task, index) => {\n          return (\n            <div key={index}>\n              {/* ... make each task's title a link that goes to the task details page */}\n              <Link to={`/projects/${this.state._id}/tasks/${task._id}`}>\n                {task.title}\n              </Link>\n            </div>\n          )\n\n        })\n        }\n        <div>\n          {this.ownershipCheck(this.state)}\n        </div>\n        <br />\n        <div>{this.renderAddTaskForm()} </div>\n        <br /><br /><br /><br /><br />\n        <Link to={'/projects'}>Back to projects</Link>\n      </div>\n    )\n  }\n}\n\nexport default ProjectDetails;","// auth/Signup.js\n\nimport React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      username: '',\n      password: '',\n      errorMsg: null\n    };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signUp(username, password)\n      .then(newUser => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        this.props.getUser(newUser)\n      })\n      .catch(error => {\n        // console.log(`no dounut for you ${error}`, error.response.data)\n        this.setState({\n          errorMsg: `${error.response.data.message}`\n        })\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>{this.state.errorMsg}</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Sign Up\" />\n        </form>\n\n        <p>Already have account?\n          <Link to={\"/\"}> Login</Link>\n        </p>\n\n      </div>\n    )\n  }\n}\n\nexport default SignUp;","// components/tasks/TaskDetails.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass TaskDetails extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount(){\n    this.getTheTask();\n  }\n\n  getTheTask = () => {\n    const { params } = this.props.match;\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects/${params.id}/tasks/${params.taskId}`)\n    .then( responseFromApi =>{\n      const theTask = responseFromApi.data;\n      this.setState(theTask);\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n      </div>\n    )\n  }\n}\n\nexport default TaskDetails;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response)\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account?\n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './components/auth/auth-service';\nimport ProtectedRoute from './components/auth/protected-routes';\nimport ProjectList from './components/projects/ProjectList';\nimport NavBar from './components/navbar/NavBar';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport SignUp from './components/auth/Signup';\nimport Login from './components/auth/Login';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: null\n    }\n    this.service = new AuthService();\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.service.loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          })\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          })\n        })\n    }\n  }\n\n  getTheUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n\n  render() {\n    this.fetchUser()\n    return (\n      <div className=\"App\">\n        <NavBar userInSession={this.state.loggedInUser} getUser={this.getTheUser} />\n        <Switch>\n          {(!this.state.loggedInUser) ?\n            (\n              <Fragment>\n                <Route exact path='/signup' render={() => <SignUp getUser={this.getTheUser} />} />\n                <Route exact path='/' render={() => <Login getUser={this.getTheUser} />} />\n                <ProtectedRoute user={this.state.loggedInUser} path=\"/projects\" component={ProjectList} />\n                <ProtectedRoute user={this.state.loggedInUser} path='/projects/:id' component={ProjectDetails} />\n              </Fragment>\n            )\n            :\n            (\n              <Fragment>\n                <Route exact path=\"/projects\" component={ProjectList} />\n                <Route exact path=\"/projects/:id\" render={(props) => <ProjectDetails loggedInUser={this.state.loggedInUser} {...props}/>} />\n              </Fragment>\n            )\n          }\n        </Switch>\n      </div>\n\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}